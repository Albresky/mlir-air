# Copyright (C) 2022, Xilinx Inc.
# Copyright (C) 2022, Advanced Micro Devices, Inc.
# SPDX-License-Identifier: MIT

LD_SRCS += \
lscript.ld

CPP_SRCS += \
main.cpp \
platform.cpp

OBJS += \
./$(OUTPUT)/main.o \
./$(OUTPUT)/platform.o

CPP_DEPS += \
./$(OUTPUT)/main.d \
./$(OUTPUT)/platform.d

CXX=aarch64-none-elf-g++
CXXFLAGS := -Wall -O0 -g3 -c -fmessage-length=0 -mcpu=cortex-a72
LIBS := -Wl,--start-group,-lxil,-lgcc,-lc,-lstdc++,--end-group
OUTPUT := src

INCLUDES += -I../airhost/include -Ibsp/psv_cortexa72_0/include

all: dirs vck5000.elf secondary-outputs

# Each subdirectory must supply rules for building sources it contributes
$(OUTPUT)/main.o: main.cpp
	@echo 'Building file: $<'
	@echo 'Invoking: ARM v8 g++ compiler'
	$(CXX) $(CXXFLAGS) $(INCLUDES) -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -o "$@" "$<"
	@echo 'Finished building: $<'
	@echo ' '

$(OUTPUT)/platform.o: platform.cpp
	@echo 'Building file: $<'
	@echo 'Invoking: ARM v8 g++ compiler'
	$(CXX) $(CXXFLAGS) $(INCLUDES) -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -o "$@" "$<"
	@echo 'Finished building: $<'
	@echo ' '

# Add inputs and outputs from these tool invocations to the build variables
ELFSIZE += \
vck5000.elf.size \

# create output directory for .o and .d files
dirs:
	mkdir -p $(OUTPUT)

# Tool invocations
vck5000.elf: $(OBJS) lscript.ld bsp/psv_cortexa72_0/lib/libxil.a
	@echo 'Building target: $@'
	@echo 'Invoking: ARM v8 g++ linker'
	$(CXX) -mcpu=cortex-a72 -Wl,-T -Wl,lscript.ld -Lbsp/psv_cortexa72_0/lib -o "vck5000.elf" $(OBJS) $(LIBS)
	@echo 'Finished building target: $@'
	@echo ' '

vck5000.elf.size: vck5000.elf
	@echo 'Invoking: ARM v8 Print Size'
	aarch64-none-elf-size vck5000.elf  |tee "vck5000.elf.size"
	@echo 'Finished building: $@'
	@echo ' '

bsp/psv_cortexa72_0/lib/libxil.a:
	@echo 'Building BSP'
	$(MAKE) -C bsp

RM := rm -rf

# Other Targets
clean:
	-$(RM) $(CC_DEPS)$(EXECUTABLES)$(OBJS)$(C_UPPER_DEPS)$(CXX_DEPS)$(S_UPPER_DEPS)$(C_DEPS)$(CPP_DEPS)$(ELFSIZE) vck5000.elf
	$(MAKE) -C bsp clean
	-@echo ' '

secondary-outputs: $(ELFSIZE)

.PHONY: all clean
